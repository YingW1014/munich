C------------------------------------------------------------------------
C     Copyright (C) 2001-2008, ENPC - INRIA - EDF R&D
C
C     This file is part of the air quality modeling system Polyphemus.
C
C     Polyphemus is developed in the INRIA - ENPC joint project-team
C     CLIME and in the ENPC - EDF R&D joint laboratory CEREA.
C
C     Polyphemus is free software; you can redistribute i and/or modify
C     it under the terms of the GNU General Public License as published
C     by the Free Software Foundation; either version 2 of the License,
C     or (at your option) any later version.
C
C     Polyphemus is distributed in the hope that it will be useful, but
C     WITHOUT ANY WARRANTY; without even the implied warranty of
C     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C     General Public License for more details.
C
C     For more information, visit the Polyphemus web site:
C     http://cerea.enpc.fr/polyphemus/
C------------------------------------------------------------------------
 
      subroutine fexchem_leighton  (ns,nr,y,rk,ZCsourc,convers_factor,
     &     chem)
 
C------------------------------------------------------------------------
C
C     -- DESCRIPTION
C
C     This routine computes the chemical production term.
C     This routine is automatically generated by SPACK.
C     Mechanism: Leighton            
C     Species: _ciCB05             
C
C------------------------------------------------------------------------
C
C     -- INPUT VARIABLES
C
C     Ns: chemical species number.
C     Y: chemical concentrations.
C     RK: kinetic rates.
C     ZCSOURC: volumic emissions.
C
C     -- INPUT/OUTPUT VARIABLES
C
C     -- OUTPUT VARIABLES
C
C     CHEM: array of chemical production terms.
C
C------------------------------------------------------------------------
C
C     -- REMARKS
C
C------------------------------------------------------------------------
C
C     -- MODIFICATIONS
C
C------------------------------------------------------------------------
C
C     -- AUTHOR(S)
C
C     SPACK.
C
C------------------------------------------------------------------------
 
      implicit none
 
      integer nr,ns,i
      double precision w(nr),rk(nr),y(ns),chem(ns),ZCsourc(ns)
      double precision conc(ns), convers_factor(ns)
 
      do i=1,ns
       chem(i)=0.d0
      enddo
 
C     Conversion mug/m3 to molecules/cm3.
 
      do i = 1, ns
         conc(i) = y(i) * convers_factor(i)
      enddo
 
C     Compute reaction rates.
 
      call rates_leighton  (ns,nr,rk,conc,w)
 
C     Chemical production terms.
 
      chem( 43) = chem( 43) + w(  1)
      chem( 48) = chem( 48) + w(  1)
      chem( 52) = chem( 52) - w(  1)
      chem( 43) = chem( 43) - w(  2)
      chem( 47) = chem( 47) + w(  2)
      chem( 47) = chem( 47) - w(  3)
      chem( 48) = chem( 48) - w(  3)
      chem( 52) = chem( 52) + w(  3)
 
C    Conversion molecules/cm3 to mug/m3.
 
      do i = 1, ns
         chem(i) = chem(i) / convers_factor(i)
      enddo
 
C     Volumic source terms.
 
      do i=1,ns
      chem(i)=chem(i)+ZCsourc(i)
      enddo
 
      RETURN
      END
 
