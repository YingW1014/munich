C------------------------------------------------------------------------
C     Copyright (C) 2001-2008, ENPC - INRIA - EDF R&D
C     
C     This file is part of the air quality modeling system Polyphemus.
C    
C     Polyphemus is developed in the INRIA - ENPC joint project-team
C     CLIME and in the ENPC - EDF R&D joint laboratory CEREA.
C    
C     Polyphemus is free software; you can redistribute it and/or modify
C     it under the terms of the GNU General Public License as published
C     by the Free Software Foundation; either version 2 of the License,
C     or (at your option) any later version.
C     
C     Polyphemus is distributed in the hope that it will be useful, but
C     WITHOUT ANY WARRANTY; without even the implied warranty of
C     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C     General Public License for more details.
C     
C     For more information, visit the Polyphemus web site:
C     http://cerea.enpc.fr/polyphemus/
C
C------------------------------------------------------------------------

      SUBROUTINE LU_solve_leighton (ns, M, x)

C------------------------------------------------------------------------
C     
C     -- DESCRIPTION 
C     
C     This routine solves M * y = x where M is an LU factorization
C     computed by LU_decompose.
C     This routine is automatically generated by LU.cpp
C     
C------------------------------------------------------------------------
C     
C     -- INPUT VARIABLES
C     
C     ns: matrix row number from the chemical species number
C     M: LU factorization computed by LU_decompose.
C     
C     -- INPUT/OUTPUT VARIABLES
C     
C     x: on entry, the right-hand side of the equation. On exit,
C     the solution of the equation.
C     
C     -- OUTPUT VARIABLES
C     
C------------------------------------------------------------------------
C     
C     -- REMARKS
C     
C------------------------------------------------------------------------
C     
C     -- MODIFICATIONS
C     
C------------------------------------------------------------------------
C     
C     -- AUTHOR(S)
C     
C------------------------------------------------------------------------

      IMPLICIT NONE

      INTEGER ns
      DOUBLE PRECISION M(ns,ns)
      DOUBLE PRECISION x(ns)
      DOUBLE PRECISION temp


C     Forward substitution.

      x(1) = x(1) / M(1, 1)

      x(2) = x(2) / M(2, 2)

      x(3) = x(3) / M(3, 3)

      x(4) = x(4) / M(4, 4)

      x(5) = x(5) / M(5, 5)

      x(6) = x(6) / M(6, 6)

      x(7) = x(7) / M(7, 7)

      x(8) = x(8) / M(8, 8)

      x(9) = x(9) / M(9, 9)

      x(10) = x(10) / M(10, 10)

      x(11) = x(11) / M(11, 11)

      x(12) = x(12) / M(12, 12)

      x(13) = x(13) / M(13, 13)

      x(14) = x(14) / M(14, 14)

      x(15) = x(15) / M(15, 15)

      x(16) = x(16) / M(16, 16)

      x(17) = x(17) / M(17, 17)

      x(18) = x(18) / M(18, 18)

      x(19) = x(19) / M(19, 19)

      x(20) = x(20) / M(20, 20)

      x(21) = x(21) / M(21, 21)

      x(22) = x(22) / M(22, 22)

      x(23) = x(23) / M(23, 23)

      x(24) = x(24) / M(24, 24)

      x(25) = x(25) / M(25, 25)

      x(26) = x(26) / M(26, 26)

      x(27) = x(27) / M(27, 27)

      x(28) = x(28) / M(28, 28)

      x(29) = x(29) / M(29, 29)

      x(30) = x(30) / M(30, 30)

      x(31) = x(31) / M(31, 31)

      x(32) = x(32) / M(32, 32)

      x(33) = x(33) / M(33, 33)

      x(34) = x(34) / M(34, 34)

      x(35) = x(35) / M(35, 35)

      x(36) = x(36) / M(36, 36)

      x(37) = x(37) / M(37, 37)

      x(38) = x(38) / M(38, 38)

      x(39) = x(39) / M(39, 39)

      x(40) = x(40) / M(40, 40)

      x(41) = x(41) / M(41, 41)

      x(42) = x(42) / M(42, 42)

      x(43) = x(43) / M(43, 43)

      x(44) = x(44) / M(44, 44)

      x(45) = x(45) / M(45, 45)

      x(46) = x(46) / M(46, 46)

      temp = M(47, 43) * x(43)
      x(47) = ( x(47) - temp ) / M(47, 47)

      temp = M(48, 47) * x(47)
      x(48) = ( x(48) - temp ) / M(48, 48)

      x(49) = x(49) / M(49, 49)

      x(50) = x(50) / M(50, 50)

      x(51) = x(51) / M(51, 51)

      temp = M(52, 47) * x(47)
      temp = temp + M(52, 48) * x(48)
      x(52) = ( x(52) - temp ) / M(52, 52)


C     Backward substitution.

      temp = M(48, 52) * x(52)
      x(48) = x(48) - temp

      temp = M(47, 48) * x(48)
      temp = temp + M(47, 52) * x(52)
      x(47) = x(47) - temp

      temp = M(43, 52) * x(52)
      x(43) = x(43) - temp


      END
